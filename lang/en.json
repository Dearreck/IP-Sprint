{
  "app_title": "IP Sprint üöÄ",
  "welcome_title": "Welcome!",
  "username_label": "Enter your username:",
  "username_placeholder": "username",
  "continue_button": "Continue",
  "choose_level_title": "Choose a Level",
  "loading_levels": "Loading levels...",
  "game_over_title": "Game Over!",
  "final_score_label": "Your final score:",
  "play_again_button": "Choose Level",
  "high_scores_title": "High Scores (Local)",
  "loading_scores": "Loading...",
  "no_scores": "No scores yet. Be the first!",
  "footer_text_1": "\"IP Sprint\" game created as a learning tool.",
  "footer_link_text": "Join the CCNA with Dearreck channel on Telegram",
  "restart_round_button": "Restart Round",
  "exit_to_menu_button": "Level Menu",
  "level_label": "Level:",
  "user_label": "User:",
  "points_label": "Points:",
  "timer_label": "Time:",
  "loading_question": "Loading question...",

  "level_entry": "Entry",
  "level_associate": "Associate",
  "level_professional": "Professional",
  "level_entry_standard": "Entry ‚òÖ",
  "level_entry_mastery": "Entry üëë",

  "progress_title_associate": "Progress for Associate Level:",
  "progress_title_professional": "Progress for Professional Level:",
  "progress_title_all_unlocked": "All levels unlocked!",

  "feedback_correct": "Correct! ‚úîÔ∏è",
  "feedback_incorrect": "Incorrect. The correct answer was: <strong>{correctAnswer}</strong> ‚ùå",
  "feedback_timeout": "Time's Up! ‚åõ The correct answer was: <strong>{correctAnswer}</strong>",
  "next_button": "Next &gt;&gt;",
  "final_result_button": "See Final Result &gt;&gt;",

  "play_again_level_button": "Play Again ({levelName})",

  "option_public": "Public",
  "option_private": "Private",
  "option_class_a": "Class A",
  "option_class_b": "Class B",
  "option_class_c": "Class C",
  "option_class_d": "Class D",
  "option_class_e": "Class E",
  "option_mask": "Mask {mask}",
  "option_mask_a": "255.0.0.0",
  "option_mask_b": "255.255.0.0",
  "option_mask_c": "255.255.255.0",
  "option_loopback": "Loopback Address",
  "option_apipa": "APIPA Address (Link-Local)",
  "option_limited_broadcast": "Limited Broadcast",
  "option_network_portion": "Network {portion}",
  "option_host_portion": "Host {portion}",
  "option_network_addr": "Net Addr {addr}",
  "option_broadcast_addr": "Broad Addr {addr}",
  "option_network_address": "Network/Subnet Address",
  "option_broadcast_address": "Broadcast Address",
  "option_usable_host_address": "Usable Host Address",
  "option_none": "None",
  "option_unknown": "Unknown",
  "option_multicast": "Multicast",
  "option_experimental": "Experimental",

  "question_given_ip_what_class": "Given the IP: <strong>{ip}</strong><br>Which class does it belong to?",
  "question_given_ip_what_type": "Given the IP: <strong>{ip}</strong><br>Is it Public or Private?",
  "question_given_ip_what_mask": "Given the IP: <strong>{ip}</strong> (Class {class})<br>What is its default subnet mask?",
  "question_select_ip_for_class": "Which of the following IPs belongs to Class <strong>{targetClass}</strong>?",
  "question_select_private_ip": "Which of the following IP addresses is <strong>Private</strong>?",
  "question_select_ip_for_mask": "Which of the following IPs would use the default mask <strong>{targetMask}</strong>?",
  "question_given_ip_what_class_type": "Given the IP: <strong>{ip}</strong><br>What is its Class and Type?",
  "question_given_ip_what_class_mask": "Given the IP: <strong>{ip}</strong><br>What is its Class and Default Mask?",
  "question_given_ip_what_class_type_mask": "Given the IP: <strong>{ip}</strong><br>What is its Class, Type, and Default Mask?",
  "question_given_ip_what_class_net_portion": "Given the IP: <strong>{ip}</strong><br>What is its Class and Network Portion (using default mask)?",
  "question_given_ip_what_class_host_portion": "Given the IP: <strong>{ip}</strong><br>What is its Class and Host Portion (using default mask)?",
  "question_rfc1918_cidr_from_block": "According to {rfcLinkHTML}, what CIDR notation corresponds to the private block starting at <strong>{blockStart}</strong>?",
  "question_rfc1918_range_from_cidr": "According to {rfcLinkHTML}, what address range corresponds to the private block defined as <strong>{cidr}</strong>?",
  "question_rfc1918_class_from_block": "The private block {rfcLinkHTML} <strong>{blockIdentifier}</strong> uses addresses originally belonging to Class:",
  "question_special_what_type": "The IP address <strong>{ip}</strong> is of type:",
  "question_special_which_is_type": "Which of the following is a <strong>{typeDescription}</strong> address?",
  "question_identify_network_portion": "Given the IP <strong>{ip}</strong> and its default mask (<strong>{mask}</strong>), what is the network portion?",
  "question_identify_host_portion": "Given the IP <strong>{ip}</strong> and its default mask (<strong>{mask}</strong>), what is the host portion?",
  "question_calculate_address": "Given the IP <strong>{ip}</strong> and its default mask (<strong>{mask}</strong>), what is its <strong>{addressType}</strong>?",
  "question_calculate_wildcard": "Given the subnet mask: <strong>{subnetMask}</strong><br>What is its corresponding wildcard mask?",
  "question_subnetting_calculate_network": "Given the IP <strong>{ip}</strong> and mask <strong>{mask}</strong> (/{prefixLength}), what is the <strong>Subnet Address</strong>?",
  "question_subnetting_calculate_broadcast": "Given the IP <strong>{ip}</strong> and mask <strong>{mask}</strong> (/{prefixLength}), what is the <strong>Broadcast Address</strong> of that subnet?",
  "question_subnetting_calculate_usable_hosts": "Given the IP <strong>{ip}</strong> and mask <strong>{mask}</strong> (/{prefixLength}), how many <strong>usable hosts</strong> are in that subnet?",
  "question_subnetting_calculate_num_subnets": "Given the IP <strong>{ip}</strong> (Class {class}) and subnet mask <strong>{mask}</strong> (/{prefixLength}), how many <strong>subnets</strong> were created from the default mask?",
  "question_identify_ip_type_in_subnet": "In the subnet of IP <strong>{ip}</strong> with mask <strong>{mask}</strong> (/{prefixLength}), what type of address is <strong>{targetIp}</strong>?",
  "question_bits_for_subnets": "For a Class {class} network (default mask /{defaultPrefix}), what is the minimum number of bits you need to borrow to create at least <strong>{requiredSubnets}</strong> subnets?",
  "question_bits_for_hosts": "What is the minimum number of host bits (h) you need to reserve to have at least <strong>{requiredHosts}</strong> usable host addresses in a subnet?",
  "question_mask_for_hosts": "You need a subnet that supports at least <strong>{requiredHosts}</strong> usable hosts. What is the most efficient subnet mask that meets this requirement?",
  "address_type_network": "Network Address",
  "address_type_broadcast": "Broadcast Address",

  "explanation_class_range_intro": "The class is determined by the <strong>first octet</strong>:",
  "explanation_class_range_note_a": "(Note: The 127.x.x.x range is for Loopback)",
  "explanation_class_mask_intro": "The default mask is determined by the class (based on the 1st octet):",
  "explanation_select_ip_for_class": "Looking for a Class {targetClass} IP. The correct one is {correctIp}.",
  "explanation_select_ip_for_mask": "Looking for an IP whose class ({class}) has the default mask {mask}.",
  "explanation_private_range_intro": "The private IP ranges (<a href=\"{rfcLink}\" target=\"_blank\" rel=\"noopener noreferrer\">RFC 1918</a>) are:",
  "explanation_private_range_note_private": "(The IP {ip} is <strong>Private</strong> and belongs to the highlighted range).",
  "explanation_private_range_note_public": "(The IP {ip} is <strong>Public</strong>).",
  "explanation_private_range_note_other": "(The IP {ip} is of type <strong>{ipType}</strong>).",
  "explanation_portion_intro": "Calculations for IP <strong>{ip}</strong> / Mask <strong>{mask}</strong>:",
  "explanation_portion_table_ip": "Original IP",
  "explanation_portion_table_mask": "Mask",
  "explanation_portion_table_wildcard": "Wildcard",
  "explanation_portion_table_netaddr": "Net. Addr.",
  "explanation_portion_table_broadaddr": "Broad. Addr.",
  "explanation_portion_table_calc_mask": "Defines network portion",
  "explanation_portion_table_calc_wildcard": "Inverse of Mask (255 - octet)",
  "explanation_portion_table_calc_netaddr": "IP <strong>AND</strong> Mask",
  "explanation_portion_table_calc_broadaddr": "Net Addr <strong>OR</strong> Wildcard",
  "explanation_portion_calc_error": "Could not generate detailed explanation table for {ip} / {mask}.",
  "explanation_special_loopback": "The <strong>127.0.0.0/8</strong> network is reserved for <strong>Loopback</strong>. It is used for internal host network testing (communicating with itself). The most common address is 127.0.0.1 (localhost).",
  "explanation_special_apipa": "The <strong>169.254.0.0/16</strong> range is used for <strong>APIPA</strong> (Automatic Private IP Addressing) or Link-Local Addresses. A host self-assigns an IP from this range if it cannot obtain one from a DHCP server. These IPs are not routable.",
  "explanation_special_limited_broadcast": "The address <strong>255.255.255.255</strong> is the <strong>Limited Broadcast</strong> address. Packets sent to this address are delivered to all hosts on the same local subnet, but routers do not forward them to other networks.",
  "explanation_special_default": "This is an address with a special purpose not detailed here.",
  "explanation_special_defined_in": "(Defined in <a href=\"{rfcLink}\" target=\"_blank\" rel=\"noopener noreferrer\">{rfcText}</a>).",
  "explanation_rfc1918_class_note": "Although the <strong>{blockId}</strong> block is classless, the IP addresses within it fall into the original range of <strong>Class {class}</strong>.",
  "explanation_wildcard_intro": "The wildcard mask is calculated by subtracting each octet of the subnet mask from 255:",
  "explanation_wildcard_calculation": "Calculation: 255 - {octetValue} = {wildcardOctet}",
  "explanation_subnetting_intro": "Calculations for IP <strong>{ip}</strong> / Mask <strong>{mask}</strong> (/{prefixLength}):",
  "explanation_subnetting_net_addr": "Subnet Address:",
  "explanation_subnetting_broad_addr": "Broadcast Address:",
  "explanation_subnetting_host_bits": "Host Bits (h):",
  "explanation_subnetting_usable_hosts": "Usable Hosts:",
  "explanation_subnetting_calc_usable_hosts": "2<sup>h</sup> - 2 = 2<sup>{hostBits}</sup> - 2 = {usableHosts}",
  "explanation_subnetting_subnet_bits": "Subnet Bits (s):",
  "explanation_subnetting_num_subnets": "Number of Subnets:",
  "explanation_subnetting_calc_num_subnets": "2<sup>s</sup> = 2<sup>{subnetBits}</sup> = {numSubnets}",
  "explanation_anding_process": "ANDing Process for Subnet Address:",
  "explanation_ip_binary": "IP (Binary):",
  "explanation_mask_binary": "Mask (Binary):",
  "explanation_and_result": "AND Result:",
  "explanation_network_address_decimal": "Subnet Address (Decimal):",
  "explanation_subnet_calc_step1": "1. Default Mask ({class}):",
  "explanation_subnet_calc_step2": "2. Subnet Mask Used:",
  "explanation_subnet_calc_step3": "3. Subnet Bits (s):",
  "explanation_subnet_calc_step4": "4. Number of Subnets:",
  "explanation_subnet_calc_formula": "2<sup>s</sup> = 2<sup>{subnetBits}</sup> = {numSubnets}",
  "explanation_host_calc_step1": "1. Subnet Mask Used:",
  "explanation_host_calc_step2": "2. Host Bits (h):",
  "explanation_host_calc_step3": "3. Usable Hosts:",
  "explanation_host_calc_formula": "2<sup>h</sup> - 2 = 2<sup>{hostBits}</sup> - 2 = {usableHosts}",
  "explanation_ip_type_net": "The address {targetIp} is the <strong>Network Address</strong> because it's the first address in the subnet (calculated as IP AND Mask).",
  "explanation_ip_type_broad": "The address {targetIp} is the <strong>Broadcast Address</strong> because it's the last address in the subnet (calculated as NetAddr OR Wildcard).",
  "explanation_ip_type_usable": "The address {targetIp} is a <strong>Usable Host Address</strong> because it's within the subnet range ({networkAddr} - {broadcastAddr}), but it's neither the network nor the broadcast address.",
  "explanation_ip_type_outside": "The address {targetIp} <strong>does not belong</strong> to the calculated subnet ({networkAddr} / {prefixLength}).",
  "explanation_bits_for_subnets_intro": "To find the required subnet bits (s) for {requiredSubnets} subnets:",
  "explanation_bits_for_subnets_step1": "1. We need the smallest power of 2 (2<sup>s</sup>) that is greater than or equal to {requiredSubnets}.",
  "explanation_bits_for_subnets_step2": "2. We calculate: {calculationSteps}",
  "explanation_bits_for_subnets_step3": "3. The exponent (s) is the minimum number of bits to borrow: <strong>{subnetBits}</strong>.",
  "explanation_bits_for_hosts_intro": "To find the required host bits (h) for {requiredHosts} usable hosts:",
  "explanation_bits_for_hosts_step1": "We need the smallest power of 2 (2<sup>h</sup>) such that the number of usable hosts (2<sup>h</sup> - 2) is greater than or equal to the required number ({requiredHosts}).",
  "explanation_bits_for_hosts_step2": "This is equivalent to finding the smallest exponent 'h' such that 2<sup>h</sup> is greater than or equal to {requiredHosts} + 2 (which is {requiredTotal}).",
  "explanation_bits_for_hosts_step3": "Let's evaluate nearby powers of 2:",
  "explanation_bits_for_hosts_step4": "The smallest power meeting the condition (2<sup>h</sup> &ge; {requiredTotal}) is 2<sup>{hostBits}</sup>. Therefore, <strong>{hostBits}</strong> host bits are needed.",
  "explanation_bits_for_hosts_calculation_line": "2<sup>{exponent}</sup> = {powerOf2} => {usableHosts} usable hosts ({comparison} {requiredHosts})",
  "explanation_mask_for_hosts_intro": "To find the subnet mask for at least {requiredHosts} usable hosts:",
  "explanation_mask_for_hosts_step1": "1. Calculate the required host bits (h): find the smallest 'h' such that 2<sup>h</sup> - 2 &ge; {requiredHosts}.",
  "explanation_mask_for_hosts_step2": "2. This is equivalent to 2<sup>h</sup> &ge; {requiredHosts} + 2 = {requiredTotal}. The smallest 'h' is <strong>{hostBits}</strong>.",
  "explanation_mask_for_hosts_step3": "3. Calculate the network bits (prefix): 32 - h = 32 - {hostBits} = <strong>{prefixLength}</strong>.",
  "explanation_mask_for_hosts_step4": "4. Convert the /{prefixLength} prefix to a decimal mask: <strong>{subnetMask}</strong>.",
  "class_note_multicast": "(Multicast)",
  "class_note_experimental": "(Experimental)",

  "table_header_concept": "Concept",
  "table_header_value": "Value",
  "table_header_calculation_note": "Calculation / Note",
  "table_header_calculation": "Calculation",
  "table_header_class": "Class",
  "table_header_range": "Range",
  "table_header_note": "Note",
  "table_header_first_octet_range": "1st Octet Range",
  "table_header_default_mask": "Default Mask",
  "table_header_block_cidr": "Block (CIDR)",
  "table_header_address_range": "Address Range",
  "table_header_portion": "Portion",
  "table_header_visual_representation": "Visual Representation",
  "table_header_octet": "Octet",
  "table_header_address_type": "Address Type",
  "table_portion_network": "Network",
  "table_portion_host": "Host",

  "game_over_base_message": "Round complete! Score: {score} / {maxScore} ({percentage}%)",
  "game_over_streak_reset_100": "(100% Streak reset)",
  "game_over_streak_reset_90": "(90% Streak reset)",
  "game_over_streak_progress": "Streak ({level}): {streak}/3.",
  "game_over_level_unlocked": "Level {levelName} Unlocked! üéâ",
  "game_over_level_unlocked_pro": "Professional Level Unlocked! üèÜ",
  "game_over_good_round_entry": "Perfect Round (100%)!",
  "game_over_good_round_associate": "Good round in Associate (+{threshold}%)!",
  "no_subnetting_performed": "No subnetting performed",

  "error_loading_user_data": "There was a problem loading user data: {message}",
  "error_no_questions_for_level": "No questions available for level {level} yet.",
  "error_invalid_question_data": "Invalid or null question data received from generator.",
  "error_loading_question_msg": "Error loading question: {message}",
  "error_creating_options": "Error creating options.",
  "error_displaying_question": "Error displaying question.",
  "no_scores_recorded": "No scores recorded",
  "error_displaying_scores": "Error displaying scores.",
  "error_end_game": "Error finishing game: {message}",
  "alert_enter_username": "Please enter a username."
}
